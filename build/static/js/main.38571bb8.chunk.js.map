{"version":3,"sources":["components/WeatherDetails.jsx","api/api.js","redux/weather-reducer.js","components/WeatherDetailsContainer.jsx","components/WeatherIcon.jsx","components/Main.jsx","App.jsx","redux/redux-store.js","index.js"],"names":["WeatherDetails","city","temperature","celsius","Math","floor","className","axios","baseURL","apiKey","getAdressData","a","response","data","getTemperature","then","resp","SET_CITY","SET_TEMPERATURE","SET_WEATHER_CODE","TOGGLE_FETCHING","initialState","weatherCode","fetching","weatherReducer","state","action","type","temp","code","isFetch","WeatherDetailsContainer","React","Component","componentDidMount","this","props","getAdress","getTemp","get","render","connect","weatherData","dispatch","main","weather","id","time","Date","getHours","isFetching","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.38571bb8.chunk.js","sourcesContent":["import React from 'react'\n\nfunction WeatherDetails({ city, temperature }) {\n    const celsius = Math.floor(temperature-273,15)\n    \n    return (\n        <div className=\"weather-details\">\n            <div className=\"city\">{city}</div>\n            <div className=\"temperature\">{celsius} &deg; C</div>\n        </div>\n    );\n}\n \nexport default WeatherDetails;\n","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://api.ipstack.com/'\r\n})\r\n\r\nconst apiKey = '431b14bdd798646063dbe3728107af4a'\r\n\r\nexport const getIp = () => {\r\n  return instance.get(`check?access_key=${apiKey}`)\r\n  .then(response => {\r\n      return response.data\r\n  })\r\n}\r\n\r\nexport const getAdressData =  async () => {\r\n  const response =  await axios.get(`http://api.ipstack.com/check?access_key=${apiKey}`)\r\n  return response.data\r\n}\r\n\r\nexport const getTemperature = async () => {\r\n  const response = await getAdressData()\r\n  return axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${response.city}&appid=056b91ad44e2ed8399949215e7ec5215`)\r\n  .then(resp => {\r\n    return resp.data\r\n  })\r\n}","import { getAdressData, getTemperature } from \"../api/api\"\r\n\r\nconst SET_CITY = 'weather/SET_CITY'\r\nconst SET_TEMPERATURE = 'weather/SET_TEMPERATURE'\r\nconst SET_WEATHER_CODE = 'weather/SET_WEATHER_CODE'\r\nconst TOGGLE_FETCHING = 'weather/TOGGLE_FETCHING'\r\n\r\nconst initialState = {\r\n  city: '',\r\n  temperature: null,\r\n  weatherCode: 803,\r\n  fetching: true\r\n}\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CITY: {\r\n      return {...state, city: action.city}\r\n    }\r\n    case SET_TEMPERATURE: {\r\n      return {...state, temperature: action.temp}\r\n    }\r\n    case SET_WEATHER_CODE: {\r\n      return {...state, weatherCode: action.code}\r\n    }\r\n    case TOGGLE_FETCHING: {\r\n      debugger\r\n      return {...state, fetching: action.isFetch}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setCity = (city) => ({type: SET_CITY, city})\r\nconst setTemperature = (temp) => ({type: SET_TEMPERATURE, temp})\r\nconst setWeatherCode = (code) => ({type: SET_WEATHER_CODE, code})\r\nexport const toggleIsFetching = (isFetch) => ({type: TOGGLE_FETCHING, isFetch})\r\n\r\nexport const getAdress = () => async (dispatch) => {\r\n  const response = await getAdressData()\r\n  dispatch(setCity(response.city))\r\n}\r\n\r\nexport const getTemp = () => async (dispatch) => {\r\n  const response = await getTemperature()\r\n  dispatch(setTemperature(response.main.temp))\r\n  dispatch(setWeatherCode(response.weather[0].id))\r\n  dispatch(toggleIsFetching(false))\r\n}\r\n\r\nexport default weatherReducer\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport WeatherDetails from './WeatherDetails';\nimport { getAdress, getTemp } from '../redux/weather-reducer'\nimport axios from 'axios';\n\nclass WeatherDetailsContainer extends React.Component {\n    componentDidMount () {\n        this.props.getAdress()\n        this.props.getTemp()\n\n        axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.props.city}&appid=056b91ad44e2ed8399949215e7ec5215`)\n        .then(response => {\n            return response\n        })\n        \n    }\n    render () {\n        return (\n            <>\n                <WeatherDetails city={this.props.city}\n                                temperature={this.props.temperature} />\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    city: state.weatherData.city,\n    temperature: state.weatherData.temperature\n})\n \nexport default connect(mapStateToProps, { getAdress, getTemp }) (WeatherDetailsContainer);\n","import React from 'react';\nimport {connect} from 'react-redux'\n\nconst WeatherIcon = ({ weatherCode }) => {\n    const date = new Date();\n    const time = date.getHours();\n    const timeOfDay = (time > 7 && time < 18) ? 'day' : 'night';\n    const className = `weather-icon wi wi-owm-${timeOfDay}-${weatherCode}`;\n\n    return <i className={className}></i>;\n}\n\nconst mapStateToProps = (state) => ({\n    weatherCode: state.weatherData.weatherCode\n})\n \nexport default connect(mapStateToProps, {}) (WeatherIcon);","import WeatherDetailsContainer from \"./WeatherDetailsContainer\"\r\nimport WeatherIcon from \"./WeatherIcon\"\r\nimport '../App.css';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Main = ({isFetching}) => {\r\n  // debugger\r\n  return (\r\n    // isFetching ?\r\n    // <div className=\"app\">Загрузка...</div>\r\n    // :\r\n    <div className=\"app\">\r\n        <WeatherIcon />\r\n        <WeatherDetailsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({isFetching: state.weatherData.fetching})) (Main)\r\n","import React from 'react';\nimport './App.css';\n// import WeatherIcon from './components/WeatherIcon';\n// import WeatherDetailsContainer from './components/WeatherDetailsContainer';\nimport Main from './components/Main';\n\nfunction App() {\n    return (\n        <>\n            <Main />\n        </>\n    )\n}\n\nexport default App\n","import {  applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport weatherReducer from './weather-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet reducers = combineReducers({\r\n    weatherData: weatherReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport './index.css';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n   document.getElementById('root')\n);"],"sourceRoot":""}